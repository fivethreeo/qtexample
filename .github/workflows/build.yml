name: CI Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
          qt6-base-dev \
          qt6-base-dev-tools \
          qt6-tools-dev-tools \
          libgl1-mesa-dev \
          libglu1-mesa-dev \
          libx11-dev \
          libxcb1-dev \
          libxkbcommon-x11-dev \
          ninja-build

      - name: Configure CMake
        run: cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build

        # Create AppDir structure
      - name: Prepare AppDir
        run: |
          mkdir -p AppDir/usr/share/icons/hicolor/256x256/apps
          convert -size 256x256 xc:lightgray -fill black -gravity center \
            -font DejaVu-Sans -pointsize 48 -annotate 0 "MyQt6App" \
            AppDir/usr/share/icons/hicolor/256x256/apps/MyQt6App.png
          cat > AppDir/MyQt6App.desktop <<EOF
          [Desktop Entry]
          Name=MyQt6App
          Exec=MyQt6App
          Type=Application
          Icon=MyQt6App
          EOF

      # Download linuxdeploy
      - name: Download linuxdeploy
        run: |
          wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          chmod +x linuxdeploy-x86_64.AppImage
          wget https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage
          chmod +x linuxdeploy-plugin-qt-x86_64.AppImage
      # Bundle AppImage
      - name: Build AppImage
        run: |
          ./linuxdeploy-x86_64.AppImage \
            --appimage-extract
          export QMAKE=/usr/bin/qmake6
          ./squashfs-root/AppRun \
            --appdir AppDir \
            --executable build/app/MyQt6App \
            --library build/c_lib/libmylib.so \
            --desktop-file AppDir/MyQt6App.desktop \
            --plugin qt \
            --output appimage

      - name: Package with CPack
        run: cmake --build build --target package
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-packages
          path: |
            build/*.deb
            build/*.tar.gz
            build/*.AppImage

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Qt6
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.5.*'
          host: 'windows'
          target: 'desktop'        
          arch: 'win64_msvc2019_64'

          # Configure CMake using Visual Studio generator
      - name: Configure CMake
        run: cmake -S . -B build -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release
      
      - name: Build
        run: cmake --build build --config Release

      - name: Deploy Qt runtime
        shell: pwsh
        run: |
          $windeployqt = "$env:Qt6_DIR\bin\windeployqt.exe"
          $exe = "build/app/Release/MyQt6App.exe"
          Write-Host "Using windeployqt: $windeployqt"
          & $windeployqt $exe

      - name: Package with CPack
        run: cmake --build build --config Release --target package

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: windows-packages
          path: |
            build/*.zip
            build/*.exe
            build/_CPack_Packages/win64/NSIS/NSISOutput.log
            build/CPackOutput.log

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Qt6
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.5.*'
          host: 'mac'
          target: 'desktop'
      - name: Install Ninja
        run: brew install ninja
      - name: Configure CMake
        run: cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release
      - name: Build
        run: cmake --build build
      - name: Deploy Qt frameworks
        run: |
          APP_PATH="build/app/MyQt6App.app"
          ls build
          which macdeployqt
          macdeployqt "$APP_PATH" -verbose=1 -dmg
      - name: Package with CPack
        run: cmake --build build --config Release --target package
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-packages
          path: |
            build/*.dmg
            build/*.pkg
