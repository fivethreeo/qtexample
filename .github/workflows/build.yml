name: CI Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
          qt6-base-dev \
          libgl1-mesa-dev \
          libglu1-mesa-dev \
          libx11-dev \
          libxcb1-dev \
          libxkbcommon-x11-dev \
          ninja-build
      - name: Configure CMake
        run: cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release
      - name: Build
        run: cmake --build build
      - name: Create AppImage
        run: |
          wget https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
          chmod +x linuxdeployqt-continuous-x86_64.AppImage
          ./linuxdeployqt-continuous-x86_64.AppImage --appimage-extract
          ./squashfs-root/AppRun build/app/MyQt6App -appimage -qmake $QT_DIR/bin/qmake
        shell: bash
      - name: Package with CPack
        run: cmake --build build --target package
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-packages
          path: |
            build/*.deb
            MyQt6App-x86_64.AppImage

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Qt6
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.5.*'
          host: 'windows'
          target: 'desktop'        
          arch: 'win64_msvc2019_64'

          # Configure CMake using Visual Studio generator
      - name: Configure CMake
        run: cmake -S . -B build -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release
      
      - name: Build
        run: cmake --build build --config Release

      - name: Deploy Qt runtime
        shell: pwsh
        run: |
          $windeployqt = "$env:Qt6_DIR\bin\windeployqt.exe"
          $exe = "build/app/Release/MyQt6App.exe"
          Write-Host "Using windeployqt: $windeployqt"
          & $windeployqt $exe

      - name: Package with CPack
        run: cmake --build build --config Release --target package

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: windows-packages
          path: |
            build/*.zip
            build/*.exe
            build/_CPack_Packages/win64/NSIS/NSISOutput.log
            build/CPackOutput.log

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Qt6
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.5.*'
          host: 'mac'
          target: 'desktop'
      - name: Install Ninja
        run: brew install ninja
      - name: Configure CMake
        run: cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release
      - name: Build
        run: cmake --build build
      - name: Deploy Qt frameworks
        run: |
          APP_PATH="build/app/MyQt6App.app"
          ls build
          which macdeployqt
          macdeployqt "$APP_PATH" -verbose=1 -dmg
      - name: Package with CPack
        run: cmake --build build --config Release --target package
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-packages
          path: |
            build/*.dmg
            build/*.pkg
